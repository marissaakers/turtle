"""empty message

Revision ID: 58a7d0306689
Revises: d8293f5179aa
Create Date: 2020-01-10 20:27:07.040219

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '58a7d0306689'
down_revision = 'd8293f5179aa'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('beach_encounter',
    sa.Column('beach_encounter_id', sa.Integer(), nullable=False),
    sa.Column('encounter_id', sa.Integer(), nullable=False),
    sa.Column('days_45', sa.Date(), nullable=True),
    sa.Column('days_70', sa.Date(), nullable=True),
    sa.Column('capture_type', sa.String(length=40), nullable=True),
    sa.Column('activity', sa.String(length=50), nullable=True),
    sa.Column('location', sa.Float(precision=5), nullable=True),
    sa.Column('location_NS', sa.String(length=1), nullable=True),
    sa.Column('lat_n', sa.Float(precision=5), nullable=True),
    sa.Column('lat_w', sa.Float(precision=5), nullable=True),
    sa.Column('site_description', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['encounter_id'], ['encounter.encounter_id'], ),
    sa.PrimaryKeyConstraint('beach_encounter_id')
    )
    op.drop_table('beachencounter')
    op.drop_constraint('beach_dc_data_beach_encounter_id_fkey', 'beach_dc_data', type_='foreignkey')
    op.create_foreign_key(None, 'beach_dc_data', 'beach_encounter', ['beach_encounter_id'], ['beach_encounter_id'])
    op.drop_constraint('nest_marking_beach_encounter_id_fkey', 'nest_marking', type_='foreignkey')
    op.create_foreign_key(None, 'nest_marking', 'beach_encounter', ['beach_encounter_id'], ['beach_encounter_id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'nest_marking', type_='foreignkey')
    op.create_foreign_key('nest_marking_beach_encounter_id_fkey', 'nest_marking', 'beachencounter', ['beach_encounter_id'], ['beach_encounter_id'])
    op.drop_constraint(None, 'beach_dc_data', type_='foreignkey')
    op.create_foreign_key('beach_dc_data_beach_encounter_id_fkey', 'beach_dc_data', 'beachencounter', ['beach_encounter_id'], ['beach_encounter_id'])
    op.create_table('beachencounter',
    sa.Column('beach_encounter_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('encounter_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('days_45', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('days_70', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('capture_type', sa.VARCHAR(length=40), autoincrement=False, nullable=True),
    sa.Column('activity', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('location', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('location_NS', sa.VARCHAR(length=1), autoincrement=False, nullable=True),
    sa.Column('lat_n', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('lat_w', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('site_description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['encounter_id'], ['encounter.encounter_id'], name='beachencounter_encounter_id_fkey'),
    sa.PrimaryKeyConstraint('beach_encounter_id', name='beachencounter_pkey')
    )
    op.drop_table('beach_encounter')
    # ### end Alembic commands ###
